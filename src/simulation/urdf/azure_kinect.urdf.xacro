<?xml version="1.0"?>
<!-- 
 Copyright (c) Microsoft Corporation. All rights reserved.
 Licensed under the MIT License.
 -->

<robot name="azure-kinect" xmlns:xacro="http://www.ros.org/wiki/xacro">
  <xacro:arg name="tf_prefix" default=""/>
  <material name="black">
    <color rgba="0. 0. 0. 1" />
  </material>
  <material name="dark_grey">
    <color rgba="0.1 0.1 0.1 1" />
  </material>
  <material name="grey">
    <color rgba="0.6 0.6 0.6 1" />
  </material>
  <material name="white">
    <color rgba="0.9 0.9 0.9 1" />
  </material>

  <link name="$(arg tf_prefix)camera_body">
    <visual>
      <origin xyz="0. 0. 0." />
      <geometry>
        <box size="0.0994 0.0996 0.023" />
      </geometry>
      <material name="white" />
    </visual>
    <collision>
      <origin xyz="0. 0. 0." />
      <geometry>
        <box size="0.0994 0.0996 0.023" />
      </geometry>
    </collision>
    <inertial>
      <mass value="0.1" />
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="0.01" ixy="0" ixz="0" iyy="0.01" iyz="0" izz="0.01" />
    </inertial>
  </link>
  <gazebo reference="$(arg tf_prefix)camera_body">
    <material>Gazebo/white</material>
  </gazebo>

  <link name="$(arg tf_prefix)camera_base">
    <visual>
      <origin xyz="-0.013 0. 0." />
      <geometry>
        <box size="0.026 0.103 0.039" />
      </geometry>
      <material name="grey" />
    </visual>
    <collision>
      <origin xyz="-0.013 0. 0." />
      <geometry>
        <box size="0.026 0.103 0.039" />
      </geometry>
    </collision>
    <inertial>
      <mass value="0.1" />
      <origin xyz="-0.013 0. 0." rpy="0 0 0"/>
      <inertia ixx="0.01" ixy="0" ixz="0" iyy="0.01" iyz="0" izz="0.01" />
    </inertial>
  </link>
  <gazebo reference="$(arg tf_prefix)camera_base">
    <material>Gazebo/Grey</material>
  </gazebo>

  <link name="$(arg tf_prefix)camera_visor">
    <visual>
      <origin xyz="-0.0128 0. 0." />
      <geometry>
        <box size="0.026 0.101 0.037" />
      </geometry>
      <material name="black" />
    </visual>
    <collision>
      <origin xyz="-0.0128 0. 0." />
      <geometry>
        <box size="0.026 0.101 0.037" />
      </geometry>
    </collision>
    <inertial>
      <mass value="0.1" />
      <origin xyz="-0.0128 0. 0." rpy="0 0 0"/>
      <inertia ixx="0.01" ixy="0" ixz="0" iyy="0.01" iyz="0" izz="0.01" />
    </inertial>
  </link>
  <gazebo reference="$(arg tf_prefix)camera_visor">
    <material>Gazebo/Black</material>
  </gazebo>

  <joint name="$(arg tf_prefix)camera_base_to_body" type="fixed">
    <parent link="$(arg tf_prefix)camera_base" />
    <child link="$(arg tf_prefix)camera_body" />
    <origin xyz="-0.0757 0. 0.008" rpy="0. 0. 0." />
  </joint>

  <joint name="$(arg tf_prefix)camera_base_to_visor" type="fixed">
    <parent link="$(arg tf_prefix)camera_base" />
    <child link="$(arg tf_prefix)camera_visor" />
    <origin xyz="0. 0. 0." rpy="0. 0. 0." />
  </joint>
  
  <link name="$(arg tf_prefix)camera_sensor" />
  <joint name="$(arg tf_prefix)camera_visor_to_sensor" type="fixed">
    <parent link="$(arg tf_prefix)camera_visor" />
    <child link="$(arg tf_prefix)camera_sensor" />
    <origin xyz="0. 0. 0." rpy="-1.57 0 -1.57" />
  </joint>
  
  <gazebo reference="$(arg tf_prefix)camera_visor">
    <sensor type="depth" name="kinect_dk_720p">
      <always_on>1</always_on>
      <visualize>0</visualize>
      <update_rate>30.0</update_rate>
      <camera>
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>1280</width>
          <height>720</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>150</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_openni_kinect.so">
          <baseline>0.2</baseline>
          <alwaysOn>1</alwaysOn>
          <updateRate>30.0</updateRate>
          <robotNamespace></robotNamespace>
          <cameraName>camera</cameraName>
          <frameName>/$(arg tf_prefix)camera_sensor</frameName>
          <imageTopicName>rgb/image_raw</imageTopicName>
          <depthImageTopicName>depth/image_raw</depthImageTopicName>
          <pointCloudTopicName>depth/points</pointCloudTopicName>
          <cameraInfoTopicName>rgb/camera_info</cameraInfoTopicName>
          <depthImageCameraInfoTopicName>depth/camera_info</depthImageCameraInfoTopicName>
          <pointCloudCutoff>0.4</pointCloudCutoff>
          <hackBaseline>0.07</hackBaseline>
          <distortionK1>0.0</distortionK1>
          <distortionK2>0.0</distortionK2>
          <distortionK3>0.0</distortionK3>
          <distortionT1>0.0</distortionT1>
          <distortionT2>0.0</distortionT2>
          <CxPrime>0.0</CxPrime>
          <Cx>0.0</Cx>
          <Cy>0.0</Cy>
          <focalLength>0</focalLength>
          <hackBaseline>0</hackBaseline>
        </plugin>
    </sensor>
  </gazebo>
</robot>
